{"version":3,"sources":["components/keypad.jsx","App.js","reportWebVitals.js","index.js"],"names":["Calc","state","prev","current","operation","dot","dotcount","dotpressed","setState","getmyid","e","num","console","log","allop","equalsto","clearall","className","type","value","String","this","name","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9131d3b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Calc extends Component {\r\n    state = {\r\n        prev: 0,\r\n        current: 0,\r\n        operation: 0,\r\n        dot: false,\r\n        dotcount: 1\r\n    }\r\n\r\n    dotpressed = () => {\r\n        this.setState({ dot: true })\r\n    }\r\n\r\n    getmyid = (e) => {\r\n\r\n        if (this.state.current !== 0) {\r\n            let num = (this.state.current * 10) + e;\r\n            this.setState({ current: num });\r\n        }\r\n        else {\r\n            this.setState({ current: e });\r\n        }\r\n\r\n        // if (this.state.dot !== false) {\r\n        //     console.log(this.state.dotcount)\r\n        //     let divi = (Math.pow(10, this.state.dotcount))\r\n        //     this.setState({ current: this.state.current / divi })\r\n\r\n        //     this.setState({ dotcount: this.state.dotcount + 1 })\r\n        // }\r\n\r\n\r\n        console.log(this.state.current);\r\n    }\r\n\r\n    allop = (e) => {\r\n        this.setState({ prev: this.state.current });\r\n        this.setState({ current: 0 });\r\n        this.setState({ operation: e })\r\n\r\n    }\r\n    equalsto = () => {\r\n\r\n        if (this.state.operation === 11) {\r\n            this.setState({ current: this.state.current + this.state.prev })\r\n        }\r\n        if (this.state.operation === 12) {\r\n            this.setState({ current: this.state.prev - this.state.current })\r\n        }\r\n        if (this.state.operation === 13) {\r\n            this.setState({ current: this.state.current * this.state.prev })\r\n        }\r\n        if (this.state.operation === 14) {\r\n            this.setState({ current: this.state.prev / this.state.current })\r\n        }\r\n        // this.getmyid();\r\n    }\r\n    clearall = () => {\r\n        this.setState({ current: 0 })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* inputdiv */}\r\n                <div className=\"d-flex justify-content-center mt-2 mb-4\">\r\n                    <input\r\n                        className=\"border shadow px-4\"\r\n                        type=\"text\"\r\n                        value={String(this.state.current)}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    {/* all operation buttons */}\r\n\r\n                    <div className=\"d-flex justify-content-center mb-4 mt-2\">\r\n                        <button name=\"C\" value=\"C\" className=\"btn btn-lg btn-warning mx-2 px-3 border\"\r\n                            onClick={() => this.clearall()}\r\n                        >\r\n                            C\r\n                        </button>\r\n                        <button name=\"+\" value=\"+\" className=\"btn btn-lg btn-warning mx-2 px-3 border\"\r\n                            onClick={(e) => this.allop(11)}\r\n                        >\r\n                            +\r\n                        </button>\r\n                        <button name=\"-\" value=\"-\" className=\"btn btn-lg btn-warning mx-2 px-3 border\"\r\n                            onClick={(e) => this.allop(12)}\r\n                        >\r\n                            -\r\n                        </button>\r\n                        <button name=\"*\" value=\"*\" className=\"btn btn-lg btn-warning mx-2 px-3 border\"\r\n                            onClick={(e) => this.allop(13)}\r\n                        >\r\n                            *\r\n                        </button>\r\n                        <button name=\"/\" value=\"/\" className=\"btn btn-lg btn-warning mx-2 px-3 border\"\r\n                            onClick={(e) => this.allop(14)}\r\n\r\n                        >\r\n                            /\r\n                        </button>\r\n                        <button name=\"=\" value=\"=\" className=\"btn btn-lg btn-success mx-2 px-4 border\"\r\n                            onClick={() => this.equalsto()}\r\n                        >\r\n                            =\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* all number buttons */}\r\n\r\n                    <div className=\"container d-flex justify-content-center mb-3\">\r\n                        <button onClick={() => this.getmyid(1)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">1</button>\r\n                        <button onClick={() => this.getmyid(2)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">2</button>\r\n                        <button onClick={() => this.getmyid(3)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">3</button>\r\n                    </div>\r\n\r\n                    <div className=\"container d-flex justify-content-center mb-3\">\r\n                        <button onClick={() => this.getmyid(4)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">4</button>\r\n                        <button onClick={() => this.getmyid(5)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">5</button>\r\n                        <button onClick={() => this.getmyid(6)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">6</button>\r\n                    </div>\r\n                    <div className=\"container d-flex justify-content-center mb-3\">\r\n                        <button onClick={() => this.getmyid(7)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">7</button>\r\n                        <button onClick={() => this.getmyid(8)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">8</button>\r\n                        <button onClick={() => this.getmyid(9)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">9</button>\r\n                    </div>\r\n                    <div className=\"container d-flex justify-content-center\">\r\n                        <button onClick={() => this.getmyid(0)} className=\"btn btn-lg btn-primary mx-2 px-3 border\">0</button>\r\n                        <button onClick={() => this.dotpressed()} className=\"btn btn-lg btn-primary mx-2 px-3 border\">.</button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Calc","// import { Component } from 'react';\nimport './App.css';\nimport Keypad from './components/keypad.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Keypad />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}